name: Terraform CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup:
    name: Terraform CI/CD
    runs-on: ubuntu-latest
    permissions:
      security-events: write   # To upload sarif files
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Authenticate gcloud
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}

      # - name: Setup Terraform
      #   uses: hashicorp/setup-terraform@v2
      #   with:
      #     terraform_version: 1.4.2

      # - name: Setup Terragrunt
      #   run: |
      #     curl -LJO https://github.com/gruntwork-io/terragrunt/releases/download/v0.32.2/terragrunt_linux_amd64
      #     chmod +x terragrunt_linux_amd64
      #     sudo mv terragrunt_linux_amd64 /usr/local/bin/terragrunt

      # - name: Terraform Format
      #   run: |
      #     cd src
      #     terraform fmt -check

      # - name: Terraform Init
      #   run: |
      #     cd src
      #     terraform init

      # - name: Terraform Validate
      #   run: |
      #     cd src
      #     terraform validate

      # - name: Lint - Test with Checkov
      #   id: checkov
      #   uses: bridgecrewio/checkov-action@master
      #   with:
      #     directory: src
      #     framework: terraform 
      #     soft_fail: true # do not return an error code if there are failed checks
      #     skip_check: CKV_GCP_38 # skip a specific check_id. can be comma separated list
      #     output_format: cli,sarif  # add both a CLI output to the console and create a results.sarif file
      #     output_file_path: console,results.sarif
        
      # - name: Upload SARIF file
      #   uses: github/codeql-action/upload-sarif@v2
      #   with:
      #     sarif_file: results.sarif

      # - name: Security - Test with TFSec
      #   uses: aquasecurity/tfsec-action@v1.0.0
      #   with:
      #     working_directory: src
      #     soft_fail: true # do not return an error code if there are failed checks

      # - name: Terragrunt Plan
      #   run: |
      #     cd environments
      #     terragrunt run-all plan --terragrunt-non-interactive

      # - name: Terragrunt Apply
      #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      #   run: |
      #     cd environments
      #     terragrunt run-all apply --auto-approve --terragrunt-non-interactive

      # - name: Terragrunt Destroy
      #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      #   run: |
      #     cd environments
      #     terragrunt run-all destroy --auto-approve --terragrunt-non-interactive